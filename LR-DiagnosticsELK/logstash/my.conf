input {
    beats {
        port => 5044
    }
}

filter{

#no need to keep this tag, drop it
 if "beats_input_codec_plain_applied" in [tags] {
        mutate {
            remove_tag => ["beats_input_codec_plain_applied"]
        }
 }

############################################################################
# LogRhythm Core Components: XM, PM, DP, AIE, Sysmon
############################################################################
	
#DP: Scmedsvr
#By default, all logs are INFO and only severity above this is added within the log, encapsulated in asterisks
 if "lr-dp-scmedsvr" in [tags] {
   grok {
    match => { "message" => ["^(?<logdate>%{MONTHNUM}/%{MONTHDAY}/%{YEAR} %{HOUR}:%{MINUTE}:%{SECOND})\.\d+ \[\w+\] (\*\*\*(?<severity>\w+)\*\*\*)?(?<rawlog>(.|\r|\n)*)$"] }
   }
   date { 
    match => [ "logdate", "MM/dd/yyyy HH:mm:ss" ]
   } 
   mutate{
    add_field => { "process" => "scmedsvr" }
    remove_field => ["logdate"]		
   }
    if ![severity] {
     mutate {
	  add_field => { "severity" => "INFO" }
     }
	}
 } 	

#SM: Sysmon
#Legacy component logs only add a severity when not INFO, i.e., Error or Warn, so we need manually add INFO to all logs that lack a severity
 if "lr-sm-scsm" in [tags] {
   grok {
    match => { "message" => ["(?<logdate>%{MONTHNUM}/%{MONTHDAY}/%{YEAR} %{HOUR}:%{MINUTE}:%{SECOND})\.\d+ \[\w+\] (\*\*\*(?<severity>\w+)\*\*\*)?(?<rawlog>(.|\r|\n)*)$$"] }
   }
   date { 
    match => [ "logdate", "MM/dd/yyyy HH:mm:ss" ]
   } 
   mutate{
    add_field => { "process" => "scsm" }
	remove_field => ["logdate"]	
   }
   if ![severity] {
    mutate {
	  add_field => { "severity" => "INFO" }
   }
 } 
} 
	
############################################################################
# DATA INDEXER
############################################################################
#DX: Allconf - 2017-09-20 15:00:02,274
 if "lr-dx-allconf" in [tags]  {
   grok {
    match => { "message" => ["(?<logdate>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}),\d+ \[(?<process>.*?)\] %{LOGLEVEL:severity} %{GREEDYDATA:rawlog}$"] }
   }
   date { 
    match => [ "logdate", "yyyy-MM-dd HH:mm:ss" ]
   } 
   mutate{
	remove_field => ["logdate"]	
   }   
 }

#DX: Anubis - 2017-09-20 15:01:34
 if "lr-dx-anubis" in [tags]  {
   grok {
    match => { "message" => ["(?<logdate>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}) \[%{LOGLEVEL:severity}\]( - )?%{GREEDYDATA:rawlog}$"] }
   }
   date { 
    match => [ "logdate", "yyyy-MM-dd HH:mm:ss" ]
   } 
   mutate{
	remove_field => ["logdate"]	
   }      
 }

#DX: Bulldozer - 2017-11-17 17:04:49
 if "lr-dx-bulldozer" in [tags]  {
   grok {
    match => { "message" => ["(?<logdate>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}) \[%{LOGLEVEL:severity}\]( - )?%{GREEDYDATA:rawlog}$"] }
   }
   date { 
    match => [ "logdate", "yyyy-MM-dd HH:mm:ss" ]
   } 
   mutate{
	remove_field => ["logdate"]	
   }         
 }
 
#DX: Columbo - 2017-11-16 12:56:53,919
 if "lr-dx-columbo" in [tags]  {
   grok {
    match => { "message" => ["(?<logdate>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}),\d+ \[(?<process>.*?)-\(\d+\)\] %{LOGLEVEL:severity} %{GREEDYDATA:rawlog}$"] }
   }
   date { 
    match => [ "logdate", "yyyy-MM-dd HH:mm:ss" ]
   } 
   mutate{
	remove_field => ["logdate"]	
   }    
 }

#DX: Carpenter
 if "lr-dx-carpenter" in [tags]  {
   grok {
    match => { "message" => ["(?<logdate>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}),\d+ \[(?<process>.*?)\] %{LOGLEVEL:severity} %{GREEDYDATA:rawlog}$"] }
   }
   date { 
    match => [ "logdate", "yyyy-MM-dd HH:mm:ss" ]
   } 
   mutate{
	remove_field => ["logdate"]	
   } 
 }

#DX: Configserver
 if "lr-dx-configserver" in [tags]  {
   grok {
    match => { "message" => ["(?<logdate>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}),\d+ \[(?<process>.*?)\] %{LOGLEVEL:severity} %{GREEDYDATA:rawlog}$"] }
   }
   date { 
    match => [ "logdate", "yyyy-MM-dd HH:mm:ss" ]
   } 
   mutate{
	remove_field => ["logdate"]	
   } 
 }
 
#DX: Denorm 
 if "lr-dx-denorm" in [tags] {
   grok {
    match => { "message" => ["(?<logdate>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}) \[%{LOGLEVEL:severity}\]( - )?%{GREEDYDATA:rawlog}$"] }
   }
   date { 
    match => [ "logdate", "yyyy-MM-dd HH:mm:ss" ]
   } 
   mutate{
	remove_field => ["logdate"]	
   } 
 }
 
#DX: Heartthrob
 if "lr-dx-heartthrob" in [tags] {
   grok {
    match => { "message" => ["(?<logdate>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}) \[%{LOGLEVEL:severity}\]( - )?%{GREEDYDATA:rawlog}$"] }
   }
   date { 
    match => [ "logdate", "yyyy-MM-dd HH:mm:ss" ]
   } 
   mutate{
	remove_field => ["logdate"]	
   } 
 } 

#DX: Transporter
 if "lr-dx-transporter" in [tags] {
   grok {
    match => { "message" => ["(?<logdate>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}) \[%{LOGLEVEL:severity}\]( - )?%{GREEDYDATA:rawlog}$"] }
   }
   date { 
    match => [ "logdate", "yyyy-MM-dd HH:mm:ss" ]
   } 
   mutate{
	remove_field => ["logdate"]	
   } 
 }  

#DX: Vitals
 if "lr-dx-vitals" in [tags] {
   grok {
    match => { "message" => ["(?<logdate>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}) \[%{LOGLEVEL:severity}\]( - )?%{GREEDYDATA:rawlog}$"] }
   }
   date { 
    match => [ "logdate", "yyyy-MM-dd HH:mm:ss" ]
   } 
   mutate{
	remove_field => ["logdate"]	
   } 
 }  

#DX: Watchdog 
 if "lr-dx-watchtower" in [tags] {
   grok {
    match => { "message" => ["(?<logdate>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}) \[%{LOGLEVEL:severity}\] (?<rawlog>(.|\r|\n)*)$"] }
   }
   date { 
    match => [ "logdate", "yyyy-MM-dd HH:mm:ss" ]
   } 
   mutate{
	remove_field => ["logdate"]
    add_field => { "process" => "watchtower" }   	
   } 
 } 

#DX: godispatch
 if "lr-dx-godispatch" in [tags] {
   grok {
    match => { "message" => ["(?<logdate>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}) \[%{LOGLEVEL:severity}\] %{GREEDYDATA:rawlog}$"] }
   }
   date {
    match => [ "logdate", "yyyy-MM-dd HH:mm:ss" ]
   }  
   mutate{
    add_field => { "process" => "godispatch" }   
   }
 } 

#DX: gomaintain
 if "lr-dx-gomaintain" in [tags] {
   grok {
    match => { "message" => ["(?<logdate>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}) \[%{LOGLEVEL:severity}\] %{GREEDYDATA:rawlog}$"] }
   }
   date {
    match => [ "logdate", "yyyy-MM-dd HH:mm:ss" ]
   }   
   mutate{
    add_field => { "process" => "gomaintain" }   
   }
 }  
 
 
#DX: Spawn
 if "lr-dx-spawn" in [tags] {
   grok {
    match => { "message" => ["(?<logdate>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}) \[%{LOGLEVEL:severity}\] %{GREEDYDATA:rawlog}$"] }
   }
   date {
    match => [ "logdate", "yyyy-MM-dd HH:mm:ss" ]
   }
   mutate{
    add_field => { "process" => "spawn" }   
   }
 }

############################################################################
# WebUI
############################################################################
#WebUI components all use same log format, but while you can use a conditional OR for the tags, using multiple blocks to ease adding further per log source GROKs

#WebUI: LogRhythm Case API
 if "lr-webui-caseapi" in [tags] {
   grok {
    match => { "message" => ["%{TIMESTAMP_ISO8601:logdate} \[%{DATA:severity}\] \[%{DATA:process}\] %{GREEDYDATA:rawlog}$"] }
   }
   date {
    match => [ "logdate", "ISO8601" ]
  }
 }

#WebUI: LogRhythm TIS API
 if "lr-tis-api" in [tags] {
   grok {
    match => { "message" => ["%{TIMESTAMP_ISO8601:logdate} \[%{DATA:severity}\] \[%{DATA:process}\] %{GREEDYDATA:rawlog}$"] }
   }
   date {
    match => [ "logdate", "ISO8601" ]
  }
 }
 
#WebUI: LogRhythm WebUI Console API
 if "lr-webui-consoleapi" in [tags] {
   grok {
    match => { "message" => ["%{TIMESTAMP_ISO8601:logdate} \[%{DATA:severity}\] \[%{DATA:process}\] %{GREEDYDATA:rawlog}$"] }
   }
   date {
    match => [ "logdate", "ISO8601" ]
  }
 } 

#WebUI: LogRhythm WebUI Console UI
 if "lr-webui-consoleui" in [tags] {
   grok {
    match => { "message" => ["%{TIMESTAMP_ISO8601:logdate} \[%{DATA:severity}\] \[%{DATA:process}\] %{GREEDYDATA:rawlog}$"] }
   }
   date {
    match => [ "logdate", "ISO8601" ]
  }
 } 
 
#WebUI: LogRhythm WebUI Indexer
 if "lr-webui-indexer" in [tags] {
   grok {
    match => { "message" => ["%{TIMESTAMP_ISO8601:logdate} \[%{DATA:severity}\] \[%{DATA:process}\] %{GREEDYDATA:rawlog}$"] }
   }
   date {
    match => [ "logdate", "ISO8601" ]
  }
 } 

#WebUI: LogRhythm WebUI Services Host API
 if "lr-webui-hostapi" in [tags] {
   grok {
    match => { 
		"message" => [
			
			#Pattern 1 - Matches logs with a severity and process
			"%{TIMESTAMP_ISO8601:logdate} \[%{DATA:severity}\] \[%{DATA:process}\] (?<rawlog>(.|\r|\n)*)$",
			
			#Pattern 2 - Matches without a severity or process, and rather include the hostname...
			"%{TIMESTAMP_ISO8601:logdate} (?<rawlog>(.|\r|\n)*)$"
			] 
		}
   }
   date {
    match => [ "logdate", "ISO8601" ]
  }
 }  

############################################################################
# Common
############################################################################
#Common: API Gateway
 if "lr-common-apigateway" in [tags] {
   grok {
    match => { "message" => ["%{TIMESTAMP_ISO8601:logdate} \[%{DATA:severity}\] (?<rawlog>(.|\r|\n)*)$"] }
   }
   date {
    match => [ "logdate", "ISO8601" ]
  }
 } 
 
#End Filter 
}





output {
  
  elasticsearch {
    hosts => ["http://localhost:9201"]
	index => "logstash-%{+YYYY.MM.dd}"  }
 
    stdout { codec => rubydebug }
  
}

  