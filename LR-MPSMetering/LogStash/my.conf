input {
    udp {
	    port => 1514
	    type => "syslog"
    }
	
	jdbc {
		jdbc_driver_library => "C:\ElasticStack\logstash-6.0.0-rc2\tools\jdbc\sqljdbc42.jar"
		jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
		jdbc_connection_string => "jdbc:sqlserver://LRLAB;user=username;password=password"
		jdbc_user => "username"
		jdbc_password => "password"
		jdbc_fetch_size => 1000
		
		#bring in results once a day
		schedule => "* 0 * * *"   
		
		#WHERE clause brings in just previous days data
		statement => "SELECT StatsMsgSourceCountsID      ,StatDate      ,MSG.Name AS LogSource	  ,MSGTYPE.Name AS LogSourceType      ,MEDIATOR.Name AS DataProcess      ,SM.Name AS SysMon      ,ENTITY.Name AS Entity      ,CountLogs      ,CountIdentifiedLogs      ,CountArchivedLogs         ,CountEvents      ,CountOnlineLogs      ,CountProcessedLogs      ,CountEventsForwarded      ,CountLogMart      ,CountAnalyzedLogs  FROM LogRhythm_LogMart.dbo.StatsMsgSourceCountsMinute STATS        INNER JOIN LogRhythmEMDB.dbo.Mediator MEDIATOR				ON STATS.MediatorID = MEDIATOR.MediatorID		INNER JOIN LogRhythmEMDB.dbo.MsgSource MSG			ON STATS.MsgSourceID = MSG.MsgSourceID		 INNER JOIN LogRhythmEMDB.dbo.systemmonitor SM                ON MSG.SystemMonitorID = SM.SystemMonitorID		INNER JOIN LogRhythmEMDB.dbo.Host HOST	ON HOST.HostID = SM.HostID		INNER JOIN LogRhythmEMDB.dbo.Entity ENTITY			ON ENTITY.EntityID = Host.EntityID		INNER JOIN LogRhythmEMDB.dbo.MsgSourceType MSGTYPE		    ON MSG.MsgSourceTypeID = MSGTYPE.MsgSourceTypeID	WHERE StatDate <= DATEADD(day, -1 , GETUTCDATE()) AND StatDate >= DATEADD(day, -2 , GETUTCDATE())		ORDER BY StatsMsgSourceCountsID ASC"
  }
	
}



filter {

}

output {
  elasticsearch { 
	hosts => ["localhost:9201"]
	index => "logstash-%{+YYYY.MM.dd}"
  }
  stdout { codec => rubydebug }
}